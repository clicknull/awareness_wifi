THISPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
source $THISPATH/setup.conf

BACKUP_FOLDER=/tmp

function create_apache_default_conf
{
	

	#create new Virtual host

	cat << EOF > /etc/apache2/sites-available/cp_tmp.conf
<VirtualHost *:80>
	ServerAdmin webmaster@localhost
	
	RewriteEngine on
	#LogLevel warn rewrite:trace4
	LogLevel warn

	RewriteCond /var/www/cp_temp/%{REQUEST_URI} !-f
	RewriteRule ^(.+) http://${interface_hotspot_ip}/portal.php

	# set base64.py script as map (encodes stdin with base64 to stdout)
	RewriteMap base64map "prg:/var/www/cp_temp/base64.py"
	# Encode url to Variable b64url (NE = No Escape)
	RewriteRule .* - [E=b64url:\${base64map:%{HTTP_HOST}%{REQUEST_URI}?%{QUERY_STRING}},NE]	
	
	# Rewrite url if not pointing to Hotspot IP
	RewriteCond %{HTTP_HOST} !^10.0.0.1 [NC]
	# Redirect to Hotspotportal and append base64 encoded url as querystring
	RewriteRule . http://${interface_hotspot_ip}/portal.php?url=%{ENV:b64url} [L,R]


	DocumentRoot /var/www/cp_temp
	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>
	<Directory /var/www/cp_temp>
		Options Indexes FollowSymLinks MultiViews
		AllowOverride None
		Order allow,deny
		allow from all
	</Directory>

	ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
	<Directory "/usr/lib/cgi-bin">
		AllowOverride None
		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
		Order allow,deny
		Allow from all
	</Directory>


	ErrorLog \${APACHE_LOG_DIR}/error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	#LogLevel warn

	CustomLog ${LOGDIR}apache_access.log combined
</VirtualHost>
EOF
}

function backup_enabled_virtual_hosts
{
	#ToDo: if backup already exists: 1) overwrite 2) restore

	# back them up
	echo "Backup of /etc/apache2/sites-enabled to $BACKUP_FOLDER/backup.tar"
	tar -cvf $BACKUP_FOLDER/backup.tar -C /etc/apache2/sites-enabled .
}

function delete_enabled_virtual_hosts
{
	# ToDo: exclude hosts, which are still needed (beef, phishing-frency)
	# only delete sites which conflict with ours (default, 000-default, 000-default.conf)
	# file content has to be regarded to disable othe conflicting sites

	find /etc/apache2/sites-enabled -not -type d -not -name backup.tar -exec rm {} \;
}

function restore_enabled_virtual_hosts
{
	if [[ -s $BACKUP_FOLDER/backup.tar ]]; then
		echo "Restoring /etc/apache2/sites-enabled from $BACKUP_FOLDER/backup.tar"
		tar -xvf $BACKUP_FOLDER/backup.tar -C /etc/apache2/sites-enabled/
		echo "Removing backup"
		rm $BACKUP_FOLDER/backup.tar
		
		#ToDo if apache is running, reload
	else
		echo "No backup of /etc/apache2/sites-enabled found"
	fi
	
}

function enable_cp_site
{
	a2ensite cp_tmp.conf
	mkdir /var/www/cp_temp
	cp -R ${THISPATH}/var/www/* /var/www/cp_temp
	chown -R www-data:www-data /var/www/cp_temp	 
}

function disable_cp_site
{
	a2dissite cp_tmp.conf
}
